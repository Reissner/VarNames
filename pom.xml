<?xml version="1.0" encoding="utf-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" 
	 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <!-- coordinates for model and artifact -->
  <modelVersion>4.0.0</modelVersion>
  <groupId>eu.simuline</groupId>
  <artifactId>varnames</artifactId>
  <version>0.1-SNAPSHOT</version>
  <packaging>jar</packaging>


  <name>VarNames</name>
  <description>
    Very strange piece of software
    checking validity of variable names. 
  </description>

  <url>http://www.simuline.eu</url><!-- TBD: create -->
  <licenses>
    <license>
      <name>MIT</name>
      <!--url>http://www.simuline.eu/LICENSE-1.0.txt</url>
	  <distribution>repo</distribution>
	  <comments>This license prohibits all kinds of distribution. </comments-->
    </license>
  </licenses>

  
  <organization>
    <name>l2r.org</name>
    <url>http://www.simuline.eu</url>
  </organization>
  
  <developers>
    <developer>
      <name>Ernst Reissner</name>
      <email>Ernst.Reissner@simuline.eu</email>
      <timezone>Europe/Berlin</timezone>
    </developer>
  </developers>
  <!-- mailingLists></mailingLists-->
  
  <pluginRepositories>
  </pluginRepositories>

  <properties>
    <versionMvn>3.6.0</versionMvn>
    <!-- Using platform encoding to copy filtered resources; 
    without project.build.sourceEncoding the build is platform dependent! -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    
    <!-- antlr4, its runtime and mvn plugin all same version, 
         tied to antlr-annotation and ST4 -->
    <versionAntlr>4.7</versionAntlr><!-- tied to antlr 4.7 -->
    <!--versionAntlrAnnot>4.3</versionAntlrAnnot--><!-- tied to antlr 4.7 -->
    <versionAntlrST4>4.0.8</versionAntlrST4>  <!-- tied to antlr 4.7 -->
    <versionAntlr3>3.5.2</versionAntlr3>  <!-- from ST4 -->

    <versionJava>1.8</versionJava><!-- not  used -->

    <srcAntlr4Dir>src/main/antlr4/</srcAntlr4Dir>
    <srcJavaDir>src/main/java/</srcJavaDir>
    <parserTargetDirNamecheck>
    ${srcJavaDir}eu/simuline/names/
    </parserTargetDirNamecheck>
    
   <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <javac.debug>true</javac.debug>
  </properties>


  <!-- source repositories: at the moment not needed. -->
  <repositories>
   <repository>
      <id>publicRepoAtSimuline</id>
      <name>repo at simuline</name>
      <url>https://www.simuline.eu/RepositoryMaven</url>
    </repository>
  </repositories>




  <distributionManagement><!-- For authentication see ~/.m2/settings.xml -->
    <site>
      <id>publicSiteAtSimuline</id>
      <url>ftp://www.simuline.eu/public_html/VarNames</url>
    </site>

    <repository>
      <id>publicRepoAtSimuline</id>
      <url>ftp://www.simuline.eu/public_html/RepositoryMaven</url>
    </repository>
  </distributionManagement>


    <scm>
    <connection>scm:svn:file:///SVN_Archive</connection>
    <developerConnection>scm:svn:file:///SVN_Archive</developerConnection>
    <tag>HEAD</tag> <!-- the default -->
    <url>file:///SVN_Archive</url><!-- publicly browseable -->
    <!--connection>
      scm:git:https://github.com/Reissner/varnames.git
    </connection>
    <developerConnection>
      scm:git:https://github.com/Reissner/varnames.git
    </developerConnection>
    <url>https://github.com/Reissner/varnames</url>
    <tag>icons-0.1</tag-->
  </scm>


  <mailingLists>
    <!--mailingList>
      <name>maven-latex-plugin Users</name>
      <archive>http://groups.google.com/group/maven-latex-plugin-users</archive>
      <post>maven-latex-plugin-users@googlegroups.com</post>
      <subscribe>maven-latex-plugin-users+subscribe@googlegroups.com</subscribe>
      <unsubscribe>maven-latex-plugin-users+unsubscribe@googlegroups.com</unsubscribe>
    </mailingList-->
  </mailingLists>

  <!--issueManagement>
    <system>Github Issues</system>
    <url>https://github.com/akquinet/maven-latex-plugin/issues</url>
    </issueManagement-->

 


  <build>

    <extensions>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
         <artifactId>wagon-ftp</artifactId>
         <version>3.3.2</version>
      </extension>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
         <artifactId>wagon-file</artifactId>
         <version>3.3.2</version>
      </extension>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
         <artifactId>wagon-http</artifactId>
         <version>3.3.2</version>
      </extension>
    </extensions>

    
    <plugins>

      <!-- at the moment just to enforce maven version -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>3.0.0-M3</version>
        <executions>
          <execution>
            <id>enforce-maven</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>${versionMvn}</version>
                </requireMavenVersion>
                <!--requireJavaVersion>
                  <version>11</version>
                </requireJavaVersion-->
              </rules>    
            </configuration>
          </execution>
        </executions>
      </plugin>


      <!-- configuration for clean plugin -->
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <version>3.0.0</version>
	<configuration>
	  <verbose>true</verbose>
	  <filesets>
	    <fileset>
	      <directory>${srcJavaDir}</directory>
	      <includes>
		<include>*Lexer.java</include>
		<include>*Parser.java</include>
		<include>*.tokens</include>
	      </includes>
	    </fileset>
	    <fileset>
	      <directory>${parserTargetDirNamecheck}</directory>
	      <includes>
		<include>**/RulesLexer.java</include>
		<include>**/RulesParser.java</include>
		<include>Rules*Listener.java</include>
		<include>Rules*Visitor.java</include>
		<include>**/Rules*.tokens</include>
	      </includes>
	    </fileset>
	    <fileset>
	      <directory>${srcAntlr4Dir}</directory>
	      <includes>
		<include>**/*.g4~</include>
	      </includes>
	    </fileset>
 	  </filesets>
	</configuration>
    </plugin>

      <!-- configuration for antlr4 TBC: really needed -->
      <plugin>
        <groupId>org.antlr</groupId>
        <artifactId>antlr4-maven-plugin</artifactId>
        <version>${versionAntlr}</version>
	<configuration>
	  <sourceDirectory>${srcAntlr4Dir}</sourceDirectory>
	  <outputDirectory>${srcJavaDir}</outputDirectory>
	  <visitor>true</visitor><!-- needed for calc only -->
	  <treatWarningsAsErrors>true</treatWarningsAsErrors>
        </configuration>
        <executions>
          <execution>
            <id>antlr</id>
            <!--phase>generate-sources</phase-->
            <goals>
              <goal>antlr4</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- configuration for the compile plugin -->
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-compiler-plugin</artifactId>
	<version>3.8.0</version>
	<configuration>
          <source>11</source>
          <target>11</target>
          <fork>true</fork>
	</configuration>
      </plugin>

      <!-- configuration for site -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <version>3.7.1</version>
        <configuration>
          <locales>en</locales>
        </configuration>
      </plugin>

     <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.1.1</version>
        <configuration>
          <archive>
            <!--manifestFile>
	    ${project.build.outputDirectory}/META-INF/MANIFEST.MF
	    </manifestFile-->
	    <manifest>
	      <!-- adds the following lines to MANIFEST.MF (default is false): 
		   Implementation-Title: ${project.name}
		   Implementation-Version: ${project.version}
		   Implementation-Vendor-Id: ${project.groupId}
		   Implementation-Vendor: ${project.organization.name}
		   Implementation-URL: ${project.url} -->
	      <addDefaultImplementationEntries>
		true
	      </addDefaultImplementationEntries>
	      <!-- adds the following lines to MANIFEST.MF (default is false): 
		   Specification-Title: ${project.name}
		   Specification-Version: 
		   ${project.artifact.selectedVersion.majorVersion}.
		   ${project.artifact.selectedVersion.minorVersion}
		   Specification-Vendor: ${project.organization.name} -->
	      <addDefaultSpecificationEntries>
		true
	      </addDefaultSpecificationEntries>
	      <mainClass>eu.simuline.names.CreatorAnalyzerFrame</mainClass>
	    </manifest>
	    <manifestEntries>
	      <codebase>https://www.simuline.eu</codebase>
	    </manifestEntries>
          </archive>
	  <includes>
            <include>eu/**</include>
            <include>org/antlr/v4/**</include>
          </includes>
        </configuration>
      </plugin>

          <!-- creates a jar with dependencies -->
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>3.1.1</version>
        <configuration>
          <descriptorRefs>
            <descriptorRef>jar-with-dependencies</descriptorRef>
          </descriptorRefs>
          <archive>
	    <manifest>
	      <mainClass>eu.simuline.names.CreatorAnalyzerFrame</mainClass>
	    </manifest>
         </archive>
        </configuration>
        <executions>
          <execution>
            <id>make-assembly</id>
            <phase>package</phase> 
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>


  <reporting>
    <plugins>
     <!-- configures the aspects of the reporting, 
	   i.e. the kinds of reports generated. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>3.0.0</version>
        <configuration>
          <dependencyLocationsEnabled>false</dependencyLocationsEnabled>
        </configuration>
	<reportSets>
	  <reportSet>
	    <id>gen-report</id>
	    <reports>
	      <report>index</report>
	      <report>summary</report>
	      <report>licenses</report>
	      <report>team</report>

	      <report>ci-management</report>
	      <!--report>dependencies</report-->
	      <report>dependency-convergence</report>
	      <report>dependency-info</report>
	      <report>dependency-management</report>
	      <report>distribution-management</report>
	      <report>help</report>
	      <report>issue-management</report>
	      <report>mailing-lists</report>
	      <report>modules</report>
	      <report>plugin-management</report>
	      <report>plugins</report>
	      <report>scm</report>
	    </reports>
	  </reportSet>
	</reportSets>
      </plugin>
   </plugins>
  </reporting>

  

  <dependencies>
    <!--ependency>
      <groupId>org.antlr</groupId>
      <artifactId>antlr4</artifactId>
      <version>4.2</version>
    </dependency-->
      <!-- If you only need the JAR in test, add the following line too -->
      <!--scope>test</scope-->
    
    <dependency>
      <groupId>org.antlr</groupId>
      <artifactId>antlr4-runtime</artifactId>
      <version>${versionAntlr}</version>
    </dependency>

    <dependency>
      <groupId>org.antlr</groupId>
      <artifactId>ST4</artifactId>
      <version>${versionAntlrST4}</version>
    </dependency>

    <dependency>
      <groupId>org.antlr</groupId>
      <artifactId>antlr-runtime</artifactId>
      <version>${versionAntlr3}</version>
    </dependency>

    <dependency>
      <groupId>eu.simuline</groupId>
      <artifactId>icons</artifactId>
      <version>0.1-SNAPSHOT</version>
    </dependency>
</dependencies>
</project>
